<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2015 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->
<resources>

  <declare-styleable name="AppBarLayout">
    <!-- Deprecated. Elevation is now controlled via a state list animator. -->
    <attr name="elevation"/>
    <attr name="android:background"/>
    <!-- The initial expanded state for the AppBarLayout. This only takes effect when this
         view is a direct child of a CoordinatorLayout. -->
    <attr name="expanded" format="boolean"/>
    <attr name="android:keyboardNavigationCluster"/>
    <attr name="android:touchscreenBlocksFocus"/>
    <!-- Whether the {@link AppBarLayout} should lift on scroll. If set to
         true, the {@link AppBarLayout} will animate to the lifted, or
         elevated, state when content is scrolled beneath it. Requires
         `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
         set on the scrolling sibling (e.g., `NestedScrollView`,
         `RecyclerView`, etc.). Default is false. -->
    <attr name="liftOnScroll" format="boolean"/>
  </declare-styleable>

  <declare-styleable name="AppBarLayoutStates">
    <!-- @deprecated in favor of {@link R.attr#state_lifted}. -->
    <attr name="state_collapsed" format="boolean"/>
    <!-- @deprecated in favor of {@link R.attr#state_liftable}. -->
    <attr name="state_collapsible" format="boolean"/>
    <!-- State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
         is lifted (elevated). -->
    <attr name="state_lifted" format="boolean"/>
    <!-- State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
         is liftable (e.g., elevates on collapse or scroll). -->
    <attr name="state_liftable" format="boolean"/>
  </declare-styleable>

  <declare-styleable name="AppBarLayout_Layout">
    <attr name="layout_scrollFlags">
      <!-- The view will be scroll in direct relation to scroll events. This flag needs to be
           set for any of the other flags to take effect. If any sibling views
           before this one do not have this flag, then this value has no effect. -->
      <flag name="scroll" value="0x1"/>

      <!-- When exiting (scrolling off screen) the view will be scrolled until it is
           'collapsed'. The collapsed height is defined by the view's minimum height. -->
      <flag name="exitUntilCollapsed" value="0x2"/>

      <!-- When entering (scrolling on screen) the view will scroll on any downwards
           scroll event, regardless of whether the scrolling view is also scrolling. This
           is commonly referred to as the 'quick return' pattern. -->
      <flag name="enterAlways" value="0x4"/>

      <!-- An additional flag for 'enterAlways' which modifies the returning view to
           only initially scroll back to it's collapsed height. Once the scrolling view has
           reached the end of it's scroll range, the remainder of this view will be scrolled
           into view. -->
      <flag name="enterAlwaysCollapsed" value="0x8"/>

      <!-- Upon a scroll ending, if the view is only partially visible then it will be
           snapped and scrolled to it's closest edge. -->
      <flag name="snap" value="0x10"/>

      <!-- An additional flag to be used with 'snap'. If set, the view will be snapped to its
           top and bottom margins, as opposed to the edges of the view itself. -->
      <flag name="snapMargins" value="0x20"/>
    </attr>

    <!-- An interpolator to use when scrolling this View. Only takes effect when View
         is scrollable. -->
    <attr name="layout_scrollInterpolator" format="reference"/>
  </declare-styleable>

  <declare-styleable name="ScrollingViewBehavior_Layout">
    <!-- The amount that the scrolling view should overlap the bottom of any AppBarLayout -->
    <attr name="behavior_overlapTop" format="dimension"/>
  </declare-styleable>

  <declare-styleable name="CollapsingToolbarLayout">
    <!--  Specifies extra space on the start, top, end and bottom
          sides of the the expanded title text. Margin values should be positive. -->
    <attr name="expandedTitleMargin" format="dimension"/>
    <!--  Specifies extra space on the start side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginStart" format="dimension"/>
    <!--  Specifies extra space on the top side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginTop" format="dimension"/>
    <!--  Specifies extra space on the end side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginEnd" format="dimension"/>
    <!--  Specifies extra space on the bottom side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginBottom" format="dimension"/>
    <!-- The text appearance of the CollapsingToolbarLayout's title when it is fully
         'expanded' -->
    <attr name="expandedTitleTextAppearance" format="reference"/>
    <!-- The text appearance of the CollapsingToolbarLayouts title when it is fully
         'collapsed' -->
    <attr name="collapsedTitleTextAppearance" format="reference"/>
    <!-- The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
         it has been scrolled sufficiently off screen. -->
    <attr name="contentScrim" format="color"/>
    <!-- The drawable to use as a scrim for the status bar content when the
         CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
         Lollipop with the correct setup. -->
    <attr name="statusBarScrim" format="color"/>
    <!-- The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
         This Toolbar descendant view does not need to be a direct child of the layout.
         If you do not set this, the first direct Toolbar child found will be used. -->
    <attr name="toolbarId" format="reference"/>
    <!-- Specifies the amount of visible height in pixels used to define when to trigger a
         scrim visibility change. -->
    <attr name="scrimVisibleHeightTrigger" format="dimension"/>
    <!-- Specifies the duration used for scrim visibility animations. -->
    <attr name="scrimAnimationDuration" format="integer"/>

    <!-- Specifies how the title should be positioned when collapsed. -->
    <attr name="collapsedTitleGravity">
      <!-- Push title to the top of its container, not changing its size. -->
      <flag name="top" value="0x30"/>
      <!-- Push title to the bottom of its container, not changing its size. -->
      <flag name="bottom" value="0x50"/>
      <!-- Push title to the left of its container, not changing its size. -->
      <flag name="left" value="0x03"/>
      <!-- Push title to the right of its container, not changing its size. -->
      <flag name="right" value="0x05"/>
      <!-- Place title in the vertical center of its container, not changing its size. -->
      <flag name="center_vertical" value="0x10"/>
      <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
      <flag name="fill_vertical" value="0x70"/>
      <!-- Place title in the horizontal center of its container, not changing its size. -->
      <flag name="center_horizontal" value="0x01"/>
      <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
      <flag name="center" value="0x11"/>
      <!-- Push title to the beginning of its container, not changing its size. -->
      <flag name="start" value="0x00800003"/>
      <!-- Push title to the end of its container, not changing its size. -->
      <flag name="end" value="0x00800005"/>
    </attr>

    <!-- Specifies how the title should be positioned when expanded. -->
    <attr name="expandedTitleGravity">
      <!-- Push title to the top of its container, not changing its size. -->
      <flag name="top" value="0x30"/>
      <!-- Push title to the bottom of its container, not changing its size. -->
      <flag name="bottom" value="0x50"/>
      <!-- Push title to the left of its container, not changing its size. -->
      <flag name="left" value="0x03"/>
      <!-- Push title to the right of its container, not changing its size. -->
      <flag name="right" value="0x05"/>
      <!-- Place title in the vertical center of its container, not changing its size. -->
      <flag name="center_vertical" value="0x10"/>
      <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
      <flag name="fill_vertical" value="0x70"/>
      <!-- Place title in the horizontal center of its container, not changing its size. -->
      <flag name="center_horizontal" value="0x01"/>
      <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
      <flag name="center" value="0x11"/>
      <!-- Push title to the beginning of its container, not changing its size. -->
      <flag name="start" value="0x00800003"/>
      <!-- Push title to the end of its container, not changing its size. -->
      <flag name="end" value="0x00800005"/>
    </attr>

    <!-- Whether the CollapsingToolbarLayout should draw its own shrinking/growing title. -->
    <attr name="titleEnabled" format="boolean"/>
    <!-- The title to show when titleEnabled is set to true. -->
    <attr name="title"/>
  </declare-styleable>

  <declare-styleable name="CollapsingToolbarLayout_Layout">
    <attr name="layout_collapseMode">
      <!-- The view will act as normal with no collapsing behavior. -->
      <enum name="none" value="0"/>
      <!-- The view will pin in place. -->
      <enum name="pin" value="1"/>
      <!-- The view will scroll in a parallax fashion. See the
           layout_collapseParallaxMultiplier attribute to change the multiplier. -->
      <enum name="parallax" value="2"/>
    </attr>

    <!-- The multiplier used when layout_collapseMode is set to 'parallax'. The value should
         be between 0.0 and 1.0. -->
    <attr name="layout_collapseParallaxMultiplier" format="float"/>
  </declare-styleable>

</resources>
