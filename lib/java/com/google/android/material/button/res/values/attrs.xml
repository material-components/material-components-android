<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright 2017 The Android Open Source Project

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<resources>

  <!-- Style to use for MaterialButtons in this theme. -->
  <attr name="materialButtonStyle" format="reference" />
  <!-- Style to use for Material Tonal Buttons in this theme. -->
  <attr name="materialButtonTonalStyle" format="reference" />
  <!-- Style to use for Material Outlined Buttons in this theme. -->
  <attr name="materialButtonOutlinedStyle" format="reference" />
  <!-- Style to use for Material Elevated Buttons in this theme. -->
  <attr name="materialButtonElevatedStyle" format="reference" />
  <!-- Style to use for Material Icon Only Buttons in this theme. -->
  <attr name="materialIconButtonStyle" format="reference" />
  <!-- Style to use for Filled Material Icon Only Buttons in this theme. -->
  <attr name="materialIconButtonFilledStyle" format="reference" />
  <!-- Style to use for Filled Tonal Material Icon Only Buttons in this theme. -->
  <attr name="materialIconButtonFilledTonalStyle" format="reference" />
  <!-- Style to use for Outlined Material Icon Only Buttons in this theme. -->
  <attr name="materialIconButtonOutlinedStyle" format="reference" />
  <!-- Style to use for MaterialButtonGroups in this theme. -->
  <attr name="materialButtonGroupStyle" format="reference" />
  <!-- Style to use for MaterialSplitButtons in this theme. -->
  <attr name="materialSplitButtonStyle" format="reference" />
  <!-- Style to use for leading Filled Button in Split Buttons in this theme. -->
  <attr name="materialSplitButtonLeadingFilledStyle" format="reference" />
  <!-- Style to use for leading Filled Tonal Button in Split Buttons in this theme. -->
  <attr name="materialSplitButtonLeadingFilledTonalStyle" format="reference" />
  <!-- Style to use for Filled Material Icon Only Split Buttons in this theme. -->
  <attr name="materialSplitButtonIconFilledStyle" format="reference" />
  <!-- Style to use for Filled Tonal Material Icon Only Split Buttons in this theme. -->
  <attr name="materialSplitButtonIconFilledTonalStyle" format="reference" />
  <!-- Style to use for MaterialButtonToggleGroups in this theme. -->
  <attr name="materialButtonToggleGroupStyle" format="reference" />
  <!-- Style for the overflow button of a button group in this theme. -->
  <attr name="materialButtonGroupOverflowButtonStyle" format="reference"/>
  <!-- Style for the overflow menu of a button group in this theme. -->
  <attr name="materialButtonGroupPopupMenuStyle" format="reference"/>

  <declare-styleable name="MaterialButton">
    <!-- Whether the button can be checked. -->
    <attr name="android:checked" />
    <attr name="android:checkable" />
    <attr name="android:insetLeft" />
    <attr name="android:insetRight" />
    <attr name="android:insetTop" />
    <attr name="android:insetBottom" />
    <!-- Background for the MaterialButton. If this is set to a drawable or color, MaterialButton
         will respect this background and not create its own MaterialShapeDrawable for the
         background. This means that the insets, shape appearance, and stroke will be ignored.
         If this attribute is not set or is @empty or @null, a MaterialShapeDrawable will be used
         for the background based on the insets, shape appearance, and stroke. -->
    <attr name="android:background" />
    <attr name="backgroundTint" />
    <attr name="backgroundTintMode" />
    <!-- Elevation for the MaterialButton. -->
    <attr name="elevation" />
    <!-- Icon drawable to display at the start of this view. -->
    <attr name="icon" format="reference" />
    <!-- Specifies the width and height to use for the icon drawable. -->
    <attr name="iconSize" format="dimension" />
    <!-- Padding between icon and button text. -->
    <attr name="iconPadding" format="dimension" />
    <!-- Specifies how the icon should be positioned on the X axis. -->
    <attr name="iconGravity">
      <!-- Push icon to the start of the button. -->
      <flag name="start" value="0x1" />
      <!-- Push the icon to the start of the text keeping a distance equal to
           {@code iconPadding} from the text. -->
      <flag name="textStart" value="0x2" />
      <!-- Push icon to the end of the button. -->
      <flag name="end" value="0x3" />
      <!-- Push the icon to the end of the text keeping a distance equal to
           {@code iconPadding} from the text. -->
      <flag name="textEnd" value="0x4" />
      <!-- Push the icon to the top of the button. -->
      <flag name="top" value="0x10" />
      <!-- Push the icon to the top of the text keeping a distance equal to
           {@code iconPadding} from the text. -->
      <flag name="textTop" value="0x20" />
    </attr>
    <!-- Tint for icon drawable to display. -->
    <attr name="iconTint" format="color" />
    <!-- Tint mode for icon drawable to display. -->
    <attr name="iconTintMode" />
    <!-- Shape appearance style reference for MaterialButton. Attribute declaration is in the Shape
     package. -->
    <attr name="shapeAppearance" />
    <!-- Shape appearance overlay style reference for MaterialButton. To be used to augment
         attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
    -->
    <attr name="shapeAppearanceOverlay" />

    <!-- Specifies the color used to draw the path outline of the button. Attribute type definition
         is in resources package. -->
    <attr name="strokeColor" />
    <!-- Width of the stroke path of the button. Default is 0. Attribute type definition is in
         resources package. -->
    <attr name="strokeWidth" />
    <!--
        Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
    -->
    <attr name="cornerRadius" format="dimension" />
    <!-- Ripple color for the button. This may be a color state list, if the desired ripple color
         should be stateful. Attribute type definition is in resources package. -->
    <attr name="rippleColor" />
    <!-- Whether the button toggles the checked state when clicked. -->
    <attr name="toggleCheckedStateOnClick" format="boolean" />
    <!-- Whether to enable optical center. -->
    <attr name="opticalCenterEnabled" format="boolean" />
  </declare-styleable>

  <declare-styleable name="MaterialButtonGroup">
    <!-- Whether all child buttons are enabled. -->
    <attr name="android:enabled" />
    <!-- The reference to the state list of the size change per state of all child buttons. -->
    <attr name="buttonSizeChange" format="reference" />
    <!-- The corner size of inner corners, which are adjacent to neighbor buttons.
         Can be a dp value as the absolute corner size; a fraction value as the relative
         corner size; or a reference to a state list corner size. -->
    <attr name="innerCornerSize" format="dimension|fraction|reference" />
    <!-- The shape appearance of the group. -->
    <attr name="shapeAppearance" />
    <!-- The shape appearance overlay of the group. -->
    <attr name="shapeAppearanceOverlay" />
    <!-- The spacing between inclusive buttons. Outlines will overlap, when set to zero
         or negative. -->
    <attr name="android:spacing" />
    <attr name="overflowMode">
      <!-- No handling to child buttons that not fit to the group.
           This can be used when the button group is wrapped in a ScrollView. -->
      <enum name="none" value="0" />
      <!-- Buttons that don't fit to the group/screen will be hidden in the group
           and contained in a popup menu. -->
      <enum name="menu" value="1" />
      <!-- Buttons that don't fit in the first row will be shown in another row below. -->
      <enum name="wrap" value="2" />
    </attr>
    <!-- The icon of the overflow button of a button group. -->
    <attr name="overflowButtonIcon" />
  </declare-styleable>

  <declare-styleable name="MaterialButtonGroup_Layout">
    <!-- The icon of the overflow button of a button group. -->
    <attr name="layout_overflowIcon" />
    <!-- The text of the overflow button of a button group. -->
    <attr name="layout_overflowText" />
  </declare-styleable>

  <declare-styleable name="MaterialButtonToggleGroup">
    <!-- Whether only a single button in this group is allowed to be checked at any time. By
         default, this is false and multiple buttons in this group are allowed to be checked at
         once. -->
    <attr name="singleSelection" />

    <!-- Whether we prevent all child buttons from being deselected.
         It's false by default. -->
    <attr name="selectionRequired" />
    <!-- The id of the child button that should be checked by default within this button group. -->
    <attr name="checkedButton" format="reference" />
    <!-- Whether this MaterialButtonToggleGroup and all its children are enabled -->
    <attr name="android:enabled" />
    <!-- The corner size of inner corners, which are adjacent to neighbor buttons.
         Can be a dp value as the absolute corner size; a fraction value as the relative
         corner size; or a reference to a state list corner size. -->
    <attr name="innerCornerSize" />
    <!-- The shape appearance of the group. -->
    <attr name="shapeAppearance" />
    <!-- The shape appearance overlay of the group. -->
    <attr name="shapeAppearanceOverlay" />
    <!-- The spacing between inclusive buttons. Outlines will overlap, when set to zero
         or negative. -->
    <attr name="android:spacing" />

  </declare-styleable>

  <!-- Container sizes. -->
  <!-- These container sizes are only meant to be used in component-level styles and
       resources as a means of indirection. They enable remapping to different values
       for different size variants. -->
  <!-- Container start padding. -->
  <attr name="containerPaddingStart" format="dimension" />
  <!-- Container end padding. -->
  <attr name="containerPaddingEnd" format="dimension" />
  <!-- Container top padding. -->
  <attr name="containerPaddingTop" format="dimension" />
  <!-- Container bottom padding. -->
  <attr name="containerPaddingBottom" format="dimension" />
  <!-- Container left inset. Aligned with the InsetDrawable API. -->
  <attr name="containerInsetLeft" format="dimension" />
  <!-- Container right inset. Aligned with the InsetDrawable API. -->
  <attr name="containerInsetRight" format="dimension" />
  <!-- Container top inset. -->
  <attr name="containerInsetTop" format="dimension" />
  <!-- Container bottom inset. -->
  <attr name="containerInsetBottom" format="dimension" />
  <!-- Container icon size. -->
  <attr name="containerIconSize" format="dimension" />
  <!-- Container icon padding. -->
  <attr name="containerIconPadding" format="dimension" />
  <!-- Container stroke width. -->
  <attr name="containerStrokeWidth" format="dimension" />
  <!-- Container label text appearance. -->
  <attr name="labelTextAppearance" format="reference" />
  <!-- Container shape appearance in default state. -->
  <attr name="containerShapeDefault" format="reference" />
  <!-- Container shape appearance in pressed state. -->
  <attr name="containerShapePressed" format="reference" />
  <!-- Container shape appearance in checked state. -->
  <attr name="containerShapeChecked" format="reference" />

  <attr name="materialSizeOverlay" format="reference" />

</resources>
