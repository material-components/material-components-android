<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2018 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<resources>

  <!-- Style to use for TextInputLayout in the theme. -->
  <attr name="textInputStyle" format="reference"/>

  <declare-styleable name="TextInputLayout">
    <!-- The text color for input text. -->
    <attr name="android:textColorHint"/>

    <!-- The hint to display in the floating label. -->
    <attr name="android:hint"/>
    <!-- Whether the layout's floating label functionality is enabled. -->
    <attr name="hintEnabled" format="boolean"/>
    <!-- Whether to animate hint state changes. -->
    <attr name="hintAnimationEnabled" format="boolean"/>
    <!-- TextAppearance of the hint in the floating label. -->
    <attr name="hintTextAppearance" format="reference"/>

    <!-- The text to display as helper text underneath the text input area. -->
    <attr name="helperText" format="string"/>
    <!-- Whether the layout's helper text functionality is enabled. -->
    <attr name="helperTextEnabled" format="boolean"/>
    <!-- TextAppearance of the helper text displayed underneath the text input area. -->
    <attr name="helperTextTextAppearance" format="reference"/>

    <!-- Whether the layout is laid out as if an error will be displayed. -->
    <attr name="errorEnabled" format="boolean"/>
    <!-- TextAppearance of any error message displayed. -->
    <attr name="errorTextAppearance" format="reference"/>

    <!-- Whether the layout is laid out as if the character counter will be displayed. -->
    <attr name="counterEnabled" format="boolean"/>
    <!-- The max length to display in the character counter. -->
    <attr name="counterMaxLength" format="integer"/>
    <!-- TextAppearance of the character counter. -->
    <attr name="counterTextAppearance" format="reference"/>
    <!-- TextAppearance of the character counter when the text is longer than the max. -->
    <attr name="counterOverflowTextAppearance" format="reference"/>

    <!-- Whether the view will display a toggle when the EditText has a password. -->
    <attr name="passwordToggleEnabled" format="boolean"/>
    <!-- Drawable to use as the password input visibility toggle icon. -->
    <attr name="passwordToggleDrawable" format="reference"/>
    <!-- Text to set as the content description for the password input visibility toggle. -->
    <attr name="passwordToggleContentDescription" format="string"/>
    <!-- Icon to use for the password input visibility toggle -->
    <attr name="passwordToggleTint" format="color"/>
    <!-- Blending mode used to apply the background tint. -->
    <attr name="passwordToggleTintMode">
      <!-- The tint is drawn on top of the drawable.
           [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
      <enum name="src_over" value="3"/>
      <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
           color channels are thrown out. [Sa * Da, Sc * Da] -->
      <enum name="src_in" value="5"/>
      <!-- The tint is drawn above the drawable, but with the drawable’s alpha
           channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
      <enum name="src_atop" value="9"/>
      <!-- Multiplies the color and alpha channels of the drawable with those of
           the tint. [Sa * Da, Sc * Dc] -->
      <enum name="multiply" value="14"/>
      <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
      <enum name="screen" value="15"/>
    </attr>

    <!-- Whether the text input area should be drawn as a filled box, an outline box, or not as a box.-->
    <attr name="boxBackgroundMode">
      <!-- Specifies that there should be no box set on the text input area. -->
      <enum name="none" value="0"/>
      <!-- Filled box mode for the text input box. -->
      <enum name="filled" value="1"/>
      <!-- Outline box mode for the text input box. -->
      <enum name="outline" value="2"/>
    </attr>
    <!-- Value to use for the EditText's collapsed top padding in box mode. -->
    <attr name="boxCollapsedPaddingTop" format="dimension"/>
    <!-- The value to use for the box's top start corner radius when in box mode. -->
    <attr name="boxCornerRadiusTopStart" format="dimension"/>
    <!-- The value to use for the box's top end corner radius when in box mode. -->
    <attr name="boxCornerRadiusTopEnd" format="dimension"/>
    <!-- The value to use for the box's bottom start corner radius when in box mode. -->
    <attr name="boxCornerRadiusBottomStart" format="dimension"/>
    <!-- The value to use for the box's bottom end corner radius when in box mode. -->
    <attr name="boxCornerRadiusBottomEnd" format="dimension"/>
    <!-- The color to use for the box's stroke when in outline box mode. -->
    <attr name="boxStrokeColor" format="color"/>
    <!-- The color to use for the box's background color when in filled box mode. -->
    <attr name="boxBackgroundColor" format="color"/>
    <!-- The value to use for the box's stroke when in outline box mode. -->
    <attr name="boxStrokeWidth" format="dimension"/>
  </declare-styleable>

</resources>
